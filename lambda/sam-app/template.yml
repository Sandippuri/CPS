# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  sam-app

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
- AWS::Serverless-2016-10-31

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code: get-all-items.js
  proposals:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/index.handler
      Runtime: nodejs10.x
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all items from a DynamoDB table.
      Policies:
        # Give Create/Read/Update/Delete Permissions to the SampleTable
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          PROPOSAL_PATH: /proposals
          API_KEY: +p9sArqKr/itlUg+AllYbw==
          API_SECRET: wtwqYMafL5kgXYKJerg66qchF2uksqThzoqAGZEy3Hg=
          REDIS_URL: redis://192.168.1.72:6379
      Events:
        Api:
          Type: Api
          Properties:
            Path: /proposals
            Method: POST
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction


  Notifications:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/dataReceiver.handler
      Runtime: nodejs10.x
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all items from a DynamoDB table.
      Policies:
        # Give Create/Read/Update/Delete Permissions to the SampleTable
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          PROPOSAL_PATH: /submit_notification
          API_KEY: +p9sArqKr/itlUg+AllYbw==
          API_SECRET: wtwqYMafL5kgXYKJerg66qchF2uksqThzoqAGZEy3Hg=
          REDIS_URL: redis://192.168.1.72:6379
      Events:
        Api:
          Type: Api
          Properties:
            Path: /submit_notification
            Method: POST
  
  SubscriptionGET:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/webhook-manager.handler
      Runtime: nodejs10.x
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all items from a DynamoDB table.
      Policies:
        # Give Create/Read/Update/Delete Permissions to the SampleTable
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          # PROPOSAL_PATH: /submit_notification
          API_KEY: +p9sArqKr/itlUg+AllYbw==
          API_SECRET: wtwqYMafL5kgXYKJerg66qchF2uksqThzoqAGZEy3Hg=
          REDIS_URL: redis://192.168.1.72:6379
      Events:
        Api:
          Type: Api
          Properties:
            Path: /subscription
            Method: GET

  SubscriptionPOST:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/webhook-manager.handler
      Runtime: nodejs10.x
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all items from a DynamoDB table.
      Policies:
        # Give Create/Read/Update/Delete Permissions to the SampleTable
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          # PROPOSAL_PATH: /submit_notification
          API_KEY: +p9sArqKr/itlUg+AllYbw==
          API_SECRET: wtwqYMafL5kgXYKJerg66qchF2uksqThzoqAGZEy3Hg=
          REDIS_URL: redis://192.168.1.72:6379
      Events:
        Api:
          Type: Api
          Properties:
            Path: /subscription
            Method: POST

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
